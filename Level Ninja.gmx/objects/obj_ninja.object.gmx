<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ninja_running</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//animation
image_speed = 0.2;  //change animation speed

//movement
grav    = 0.2; //Gravity
speed_x = 0;
speed_y = 0;

//for mobile device input
swipe1_x = 0; //x start of swipe
swipe1_y = 0; //y start of swipe
swipe2_x = 0; //x end of swipe
swipe2_y = 0; //y end of swipe
swipe_time = 0; //duration of swipe counted in frames
swiped = false; //whether a swipe has just ended. only true for one frame.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed_y += grav; //apply gravity

//for mobile device input.
if(mouse_check_button_pressed(mb_left)) { //check for beginning of swipe
    swipe1_x = mouse_x;
    swipe1_y = mouse_y;
}


if(mouse_check_button(mb_left)) { //update swipe_time while screen is being pressed
    swipe_time += 1
}


if(mouse_check_button_released(mb_left)) { //check for end of swipe
    swipe2_x = mouse_x;
    swipe2_y = mouse_y;
    swiped = true;
}

//calculate swipe speed based on time and positions
if(swiped &amp;&amp; place_meeting(x, y + 1, obj_solid)) {
    if(swipe1_y - swipe2_y &gt; 0) { //if swiped up
        speed_y -= ((swipe1_y - swipe2_y)/swipe_time);
        speed_y = clamp(speed_y, -5, 0); //make sure speed doesn't go below a certain value. otherwise super jump
    }
    
    swipe_time = 0;
    swiped = false;
}

//vertical collision
if(place_meeting(x, y + speed_y, obj_solid))
{
    while(!place_meeting(x, y + sign(speed_y), obj_solid))
    {
        y += sign(speed_y);
    }
    speed_y = 0;
}

y += speed_y; //update speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
